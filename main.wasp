app wasptodo {
  title: "wasptodo",

  auth: {
    userEntity: User,
    methods: [EmailAndPassword],
    onAuthFailedRedirectTo: "/login"
  }
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  component: import Main from "@ext/MainPage",
  authRequired: true
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@ext/SignupPage"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@ext/LoginPage"
}

entity User {=psl
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
  tasks         Task[]
psl=}

entity Task {=psl
  id            String    @id @default(uuid())
  description   String    
  isDone        Boolean   @default(false)
  user          User?     @relation(fields: [userId], references: [id])
  userId        String?
psl=}

query getTasks {
  fn: import { getTasks } from "@ext/queries.js",
  entities: [Task]
}

action createTask {
  fn: import { createTask } from "@ext/actions.js",
  entities: [Task]
}
action updateTask {
  fn: import { updateTask } from "@ext/actions.js", 
  entities: [Task]
}